/* eslint-disable indent */
/**
ðŸ‘‰ : moves the memory pointer to the next cell

ðŸ‘ˆ : moves the memory pointer to the previous cell

ðŸ‘† : increment the memory cell at the current position

ðŸ‘‡ : decreases the memory cell at the current position.

ðŸ¤œ : if the memory cell at the current position is 0, jump just after the corresponding ðŸ¤›

ðŸ¤› : if the memory cell at the current position is not 0, jump just after the corresponding ðŸ¤œ

ðŸ‘Š : Display the current character represented by the ASCII code defined by the current position
*/

const MIN_CELL = 0
const MAX_CELL = 255

const clamp = value => {
    if (value > MAX_CELL) return MIN_CELL
    if (value < MIN_CELL) return MAX_CELL
    return value
}

const getNextIndex = (index, instructions) => {
    let fists = 1
    for (let i = index + 1; i < instructions.length; i++) {
        if (instructions[i] === 'ðŸ¤œ') fists++
        if (instructions[i] === 'ðŸ¤›') fists--
        if (fists === 0) return i
    }
}

const getPrevIndex = (index, instructions) => {
    let fists = 1
    for (let i = index - 1; i >= 0; i++) {
        if (instructions[i] === 'ðŸ¤œ') fists--
        if (instructions[i] === 'ðŸ¤›') fists++
        if (fists === 0) return i
    }
}

function translate (string) {
    const memory = [0] // array as memory

    let pointer = 0 // memory pointer
    let index = 0
    let output = ''

    // converting the emojis into a string
    const arrayOfEmojis = Array.from(string)

    const diccionary = {
        'ðŸ‘‰': () => {
            pointer++
            memory[pointer] ??= 0
        },
        'ðŸ‘ˆ': () => {
            pointer--
            memory[pointer] ??= 0
        },
        'ðŸ‘†': () => {
            memory[pointer] = clamp(memory[pointer] + 1)
        },
        'ðŸ‘‡': () => {
            memory[pointer] = clamp(memory[pointer] - 1)
        },
        'ðŸ¤œ': () => {
            if (memory[pointer] === 0) {
                index = getNextIndex(index, arrayOfEmojis)
            }
        },
        'ðŸ¤›': () => {
            if (memory[pointer] !== 0) {
                index = getPrevIndex(index, arrayOfEmojis)
            }
        },
        'ðŸ‘Š': () => {
            output += String.fromCharCode(memory[pointer])
        }
    }

    while (index < arrayOfEmojis.length) {
        const action = arrayOfEmojis[index]
        diccionary[action]()
        index++
    }

    return output
}

console.log(translate('ðŸ¤œðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘ˆðŸ¤›ðŸ‘‰ðŸ‘‡ðŸ‘ŠðŸ‘‡ðŸ¤œðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ˆðŸ¤›ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘Š'))
console.log(translate('ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ¤œðŸ‘‡ðŸ‘ˆðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘ŠðŸ‘‰ðŸ‘‰ðŸ‘†ðŸ‘‰ðŸ‘‡ðŸ¤œðŸ‘†ðŸ¤›ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ¤œðŸ‘‰ðŸ¤œðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ˆðŸ‘ˆðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘ˆðŸ¤›ðŸ‘‰ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘‰ðŸ‘‡ðŸ‘ŠðŸ‘ˆðŸ‘ˆðŸ‘†ðŸ¤œðŸ‘‰ðŸ¤œðŸ‘†ðŸ‘‰ðŸ‘†ðŸ¤›ðŸ‘‰ðŸ‘‰ðŸ¤›ðŸ‘ˆðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘‰ðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘ŠðŸ‘‰ðŸ‘†ðŸ‘ŠðŸ‘‰ðŸ‘†ðŸ‘Š'))

module.exports = translate